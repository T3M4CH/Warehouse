// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Warehouse.Data;

#nullable disable

namespace Warehouse.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250310125625_DerivedProducts")]
    partial class DerivedProducts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Warehouse.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Warehouse.Entities.Animal", b =>
                {
                    b.HasBaseType("Warehouse.Entities.Product");

                    b.Property<string>("PassId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("Animals", (string)null);
                });

            modelBuilder.Entity("Warehouse.Entities.Cloth", b =>
                {
                    b.HasBaseType("Warehouse.Entities.Product");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("Clothes", (string)null);
                });

            modelBuilder.Entity("Warehouse.Entities.Food", b =>
                {
                    b.HasBaseType("Warehouse.Entities.Product");

                    b.Property<DateTime>("ExpiredData")
                        .HasColumnType("timestamp with time zone");

                    b.ToTable("Food", (string)null);
                });

            modelBuilder.Entity("Warehouse.Entities.Animal", b =>
                {
                    b.HasOne("Warehouse.Entities.Product", null)
                        .WithOne()
                        .HasForeignKey("Warehouse.Entities.Animal", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Warehouse.Entities.Cloth", b =>
                {
                    b.HasOne("Warehouse.Entities.Product", null)
                        .WithOne()
                        .HasForeignKey("Warehouse.Entities.Cloth", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Warehouse.Entities.Food", b =>
                {
                    b.HasOne("Warehouse.Entities.Product", null)
                        .WithOne()
                        .HasForeignKey("Warehouse.Entities.Food", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
